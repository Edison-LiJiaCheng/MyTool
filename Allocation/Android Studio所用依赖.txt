《工具大全》
https://github.com/AbrahamCaiJin/CommonUtilLibrary

《9.0》
android:networkSecurityConfig="@layout/network_security_config"

《project.allprojects.repositories下面的粘性头部局》
maven { url 'https://jitpack.io' }

《粘性头部局》
implementation 'com.github.qdxxxx:StickyHeaderDecoration:1.0.1'

《防止错乱》
configurations.all {
		resolutionStrategy.eachDependency { DependencyResolveDetails details ->
			def requested = details.requested
			if (requested.group == 'com.android.support') {
				if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.1'
				}
			}
		}
	}

《eventbus》
implementation 'org.greenrobot:eventbus:3.1.1'

《Okhttp》
implementation 'com.squareup.okhttp3:okhttp:3.11.0'

《Ok拦截器》

implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'   //OkHttp拦截器依赖(log拦截器)

《侧滑，TabLayout，RecyclerView》
implementation 'com.android.support:design:28.0.0'


《banner》	
implementation 'com.youth.banner:banner:1.4.10'


《xrecyclerview》
implementation 'com.jcodecraeer:xrecyclerview:1.5.9'

          
《Cardview》
implementation 'com.android.support:cardview-v7:28.0.0'   

            
《Butterknife》
implementation 'com.jakewharton:butterknife:8.8.1'                                 
annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'


《搜索框》	
implementation 'com.miguelcatalan:materialsearchview:1.4.0'


《日期》	
implementation 'com.prolificinteractive:material-calendarview:1.4.0'


《SmartRefreshLayout》
implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4-7' 
implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.4-7'

《拦截器》
androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

《爬虫》
implementation 'org.jsoup:jsoup:1.11.3'


《greendao--------》
project
    dependencies路径下添加
    classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2' // add plugin
Module
    顶部添加
    apply plugin: 'org.greenrobot.greendao' // apply plugin

    android目录下添加
     greendao {
            schemaVersion 1  // 数据库的版本号
            daoPackage 'jiyun.example.cts.day5_greendao.dao'  // 自己项目的包名
            targetGenDir 'src/main/java' // 存放的目录地址
     }

        普通依赖
     implementation 'org.greenrobot:greendao:3.2.0'
     implementation 'org.greenrobot:greendao-generator:3.2.0'

《--------greendao》

《RXJAVA+Retrofit》
implementation 'com.squareup.retrofit2:retrofit:2.5.0'//Retrofit依赖
implementation 'com.squareup.retrofit2:converter-gson:2.4.0' // 可选依赖，解析json字符所用
implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0' // 必要依赖，和Rxjava结合必须用到，下面会提到
implementation "io.reactivex.rxjava2:rxjava:2.1.3" // 必要rxjava2依赖
implementation "io.reactivex.rxjava2:rxandroid:2.0.1" // 必要rxandrroid依赖，切线程时需要用到

《RxAppCompatActivity》
implementation "com.trello.rxlifecycle2:rxlifecycle-components:2.2.2"

《lib有文件夹时候》
sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }


《defaultConfig 下添加RxJava防止冲突》
	packagingOptions {
           		 exclude 'META-INF/rxjava.properties'
       	 }

《Glide》
implementation 'com.github.bumptech.glide:glide:4.8.0'
annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'


《RxLifecycley依赖库 生命周期库 防止内存泄漏》
implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'
implementation 'com.trello.rxlifecycle2:rxlifecycle-navi:2.1.0'

《基础库》
implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.2' //基础库
implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.2'

//Android中使用的库，内部引用了基础库，如果使用此库则无需再引用基础库
implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'

//Android组件库，里面定义了例如RxActivity、RxFragment等Android组件，内部引用了基础库和Android库，如果使用此库则无需再重复引用
implementation 'com.trello.rxlifecycle2:rxlifecycle-components-preference:2.2.2'

// Android使用的库，继承NaviActivity使用
implementation 'com.trello.rxlifecycle2:rxlifecycle-navi:2.2.2'

//Android使用的库，继承LifecycleActivity使用，需要引入Google的仓库支持
implementation 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.2.2'
//使用AndroidLifecycle

《权限》
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />         //网络广播权限(清单目录)
   	<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />     //开机监听广播权限(清单目录)
	<uses-permission android:name="android.permission.READ_SMS"/>                                 //短信权限(清单目录)
	<uses-permission android:name="android.permission.CALL_PHONE"/>                             //打电话权限(清单目录)
	<uses-permission android:name="android.permission.CAMERA"/>                                    //相机,相册权限(清单目录)


if (Build.VERSION.SDK_INT >= 23) {
            int REQUEST_CODE_CONTACT = 101;
            String[] permissions = {Manifest.permission.CAMERA,
                    Manifest.permission.READ_EXTERNAL_STORAGE,
                    Manifest.permission.WRITE_EXTERNAL_STORAGE,
                    Manifest.permission.INTERNET};
            //验证是否许可权限
            for (String str : permissions) {
                if (this.checkSelfPermission(str) != PackageManager.PERMISSION_GRANTED) {
                    //申请权限
                    this.requestPermissions(permissions, REQUEST_CODE_CONTACT);
                    return;
                }
            }
        }